name: Xcode - Build and Analyze

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    name: Build and analyse default scheme using xcodebuild command
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set Default Scheme
        run: |
          scheme_list=$(xcodebuild -list -json | tr -d "\n")
          default=$(echo $scheme_list | ruby -e "require 'json'; puts JSON.parse(STDIN.gets)['project']['targets'][0]")
          echo $default | cat >default
          echo Using default scheme: $default
      - name: Build
        env:
          scheme: ${{ 'default' }}
        run: |
          TARGETS: "ios-sim-cross-x86_64 ios-sim-cross-arm64 ios-cross-arm64 mac-catalyst-x86_64 mac-catalyst-arm64" sh build-libssl.sh
          cp /Users/runner/work/OpenSSL-for-iPhone/OpenSSL-for-iPhone/lib/libssl-iOS.a /Users/runner/work/OpenSSL-for-iPhone/lib/libssl.a
          cp /Users/runner/work/OpenSSL-for-iPhone/OpenSSL-for-iPhone/lib/libcrypto-iOS.a /Users/runner/work/OpenSSL-for-iPhone/lib/libcrypto.a
          cp -R /Users/runner/work/OpenSSL-for-iPhone/OpenSSL-for-iPhone/include/* /Users/runner/work/OpenSSL-for-iPhone/OpenSSL-for-iPhone/include/
          cd /Users/runner/work/OpenSSL-for-iPhone
          git add lib
          git add include
          git commit -m "build product"
          git push origin
